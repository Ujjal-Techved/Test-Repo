name: Update Azure DevOps Task from GitHub Events

on:
  push:
    branches:
      - develop
      - uat
      - production
      - 'feature-*'
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize]

jobs:
  update_azure_devops:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - name: Set Environment Variables for Push and PR
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            BRANCH_NAME="${{ github.ref_name }}"
            COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
            COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
            COMMIT_MESSAGE="${{ github.event.pull_request.title }}"
            COMMIT_URL="${{ github.event.pull_request.html_url }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
          fi
          
          # Extract Task ID from Commit Message (Format: 123: <message>)
          TASK_ID=$(echo "$COMMIT_MESSAGE" | grep -oE '^[0-9]+' | head -1)
          
          echo "Branch: $BRANCH_NAME"
          echo "Commit Message: $COMMIT_MESSAGE"
          echo "Commit URL: $COMMIT_URL"
          echo "PR URL: ${PR_URL:-None}"
          echo "Task ID: ${TASK_ID:-Not Found}"

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "COMMIT_URL=$COMMIT_URL" >> $GITHUB_ENV
          echo "PR_URL=${PR_URL:-}" >> $GITHUB_ENV
          echo "TASK_ID=${TASK_ID:-}" >> $GITHUB_ENV

      - name: Extract Task ID and Message from Issue Comment
        if: github.event_name == 'issue_comment'
        run: |
          COMMENT="${{ github.event.comment.body }}"
          echo "Full Comment: $COMMENT"
          TASK_ID=$(echo "$COMMENT" | awk -F': ' '{print $1}')
          MESSAGE=$(echo "$COMMENT" | awk -F': ' '{print $2}')
          
          if [[ ! "$TASK_ID" =~ ^[0-9]+$ ]]; then
            echo "Invalid task ID format. Exiting."
            exit 1
          fi

          echo "Extracted Task ID: $TASK_ID"
          echo "Message: $MESSAGE"

          echo "TASK_ID=$TASK_ID" >> $GITHUB_ENV
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

      - name: Update Azure DevOps Task
        run: |
          UPDATE_MESSAGE=""
          
          if [[ -n "${{ env.MESSAGE }}" ]]; then
            UPDATE_MESSAGE="${{ env.MESSAGE }}"
          fi
          
          if [[ -n "${{ env.COMMIT_MESSAGE }}" ]]; then
            UPDATE_MESSAGE+="\n\n**Commit Message:** ${{ env.COMMIT_MESSAGE }}"
          fi
          
          if [[ -n "${{ env.BRANCH_NAME }}" ]]; then
            UPDATE_MESSAGE+="\n\n**Branch:** ${{ env.BRANCH_NAME }}"
          fi
          
          if [[ -n "${{ env.COMMIT_URL }}" ]]; then
            UPDATE_MESSAGE+="\n\n**Commit:** [View Commit](${{ env.COMMIT_URL }})"
          fi
          
          if [[ -n "${{ env.PR_URL }}" ]]; then
            UPDATE_MESSAGE+="\n\n**Pull Request:** [PR Link](${{ env.PR_URL }})"
          fi

          if [[ -z "${{ env.TASK_ID }}" ]]; then
            echo "No Task ID found. Skipping update."
            exit 0
          fi

          echo "Updating Azure DevOps Task ID: ${{ env.TASK_ID }} with the following details:"
          echo "$UPDATE_MESSAGE"

          curl -X PATCH -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.AZURE_DEVOPS_PAT }}" \
          -d '{
            "fields": {
              "System.History": "'"$UPDATE_MESSAGE"'"
            }
          }' \
          "https://dev.azure.com/${{ secrets.AZURE_ORG }}/${{ secrets.AZURE_PROJECT }}/_apis/wit/workitems/${{ env.TASK_ID }}?api-version=6.0"
